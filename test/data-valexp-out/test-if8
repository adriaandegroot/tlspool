VALIDATION EXPRESSION: "ETad&~?"

SIGNAL VECTOR: "ET"
Input:  "ETad&~?"
Starting handler for 'a'
Starting handler for 'T'
Starting handler for 'd'
Starting handler for 'E'
Parsed value: "T~d | T~a | adE | TE"
Setting predicate 'E' to True
Stopping handler for 'E'
Interm value: "T~d | T~a | ad | T"
Setting predicate 'T' to True
Stopping handler for 'a'
Stopping handler for 'T'
Stopping handler for 'd'
FINAL OUTCOME: VALIDATED
Interm value: "1"
Result value: "1"
Unregistered validation expression

SIGNAL VECTOR: "Ta"
Input:  "ETad&~?"
Starting handler for 'a'
Starting handler for 'T'
Starting handler for 'd'
Starting handler for 'E'
Parsed value: "T~d | T~a | adE | TE"
Setting predicate 'T' to True
Stopping handler for 'T'
Interm value: "~d | ~a | adE | E"
Setting predicate 'a' to True
Stopping handler for 'a'
Interm value: "~d | E | dE"
Result value: "~d | E | dE"
Stopping handler for 'd'
Stopping handler for 'E'
FINAL OUTCOME: FAILED
Unregistered validation expression

SIGNAL VECTOR: "Td"
Input:  "ETad&~?"
Starting handler for 'a'
Starting handler for 'T'
Starting handler for 'd'
Starting handler for 'E'
Parsed value: "T~d | T~a | adE | TE"
Setting predicate 'T' to True
Stopping handler for 'T'
Interm value: "~d | ~a | adE | E"
Setting predicate 'd' to True
Stopping handler for 'd'
Interm value: "E | ~a | aE"
Result value: "E | ~a | aE"
Stopping handler for 'a'
Stopping handler for 'E'
FINAL OUTCOME: FAILED
Unregistered validation expression

SIGNAL VECTOR: "Tad"
Input:  "ETad&~?"
Starting handler for 'a'
Starting handler for 'T'
Starting handler for 'd'
Starting handler for 'E'
Parsed value: "T~d | T~a | adE | TE"
Setting predicate 'T' to True
Stopping handler for 'T'
Interm value: "~d | ~a | adE | E"
Setting predicate 'a' to True
Stopping handler for 'a'
Interm value: "~d | E | dE"
Setting predicate 'd' to True
Stopping handler for 'd'
Interm value: "E | E"
Result value: "E | E"
Stopping handler for 'E'
FINAL OUTCOME: FAILED
Unregistered validation expression

SIGNAL VECTOR: "Ed"
Input:  "ETad&~?"
Starting handler for 'a'
Starting handler for 'T'
Starting handler for 'd'
Starting handler for 'E'
Parsed value: "T~d | T~a | adE | TE"
Setting predicate 'E' to True
Stopping handler for 'E'
Interm value: "T~d | T~a | ad | T"
Setting predicate 'd' to True
Stopping handler for 'd'
Interm value: "T | T~a | a"
Result value: "T | T~a | a"
Stopping handler for 'a'
Stopping handler for 'T'
FINAL OUTCOME: FAILED
Unregistered validation expression

SIGNAL VECTOR: "Ea"
Input:  "ETad&~?"
Starting handler for 'a'
Starting handler for 'T'
Starting handler for 'd'
Starting handler for 'E'
Parsed value: "T~d | T~a | adE | TE"
Setting predicate 'E' to True
Stopping handler for 'E'
Interm value: "T~d | T~a | ad | T"
Setting predicate 'a' to True
Stopping handler for 'a'
Interm value: "T~d | T | d"
Result value: "T~d | T | d"
Stopping handler for 'T'
Stopping handler for 'd'
FINAL OUTCOME: FAILED
Unregistered validation expression

SIGNAL VECTOR: "Ead"
Input:  "ETad&~?"
Starting handler for 'a'
Starting handler for 'T'
Starting handler for 'd'
Starting handler for 'E'
Parsed value: "T~d | T~a | adE | TE"
Setting predicate 'E' to True
Stopping handler for 'E'
Interm value: "T~d | T~a | ad | T"
Setting predicate 'a' to True
Stopping handler for 'a'
Interm value: "T~d | T | d"
Setting predicate 'd' to True
Stopping handler for 'T'
Stopping handler for 'd'
FINAL OUTCOME: VALIDATED
Interm value: "1"
Result value: "1"
Unregistered validation expression

SIGNAL VECTOR: "Ea~d"
Input:  "ETad&~?"
Starting handler for 'a'
Starting handler for 'T'
Starting handler for 'd'
Starting handler for 'E'
Parsed value: "T~d | T~a | adE | TE"
Setting predicate 'E' to True
Stopping handler for 'E'
Interm value: "T~d | T~a | ad | T"
Setting predicate 'a' to True
Stopping handler for 'a'
Interm value: "T~d | T | d"
Interm value: "T~d | T | d"
Setting predicate 'd' to False
Stopping handler for 'd'
Interm value: "T | T"
Result value: "T | T"
Stopping handler for 'T'
FINAL OUTCOME: FAILED
Unregistered validation expression

SIGNAL VECTOR: "Ed~a"
Input:  "ETad&~?"
Starting handler for 'a'
Starting handler for 'T'
Starting handler for 'd'
Starting handler for 'E'
Parsed value: "T~d | T~a | adE | TE"
Setting predicate 'E' to True
Stopping handler for 'E'
Interm value: "T~d | T~a | ad | T"
Setting predicate 'd' to True
Stopping handler for 'd'
Interm value: "T | T~a | a"
Interm value: "T | T~a | a"
Setting predicate 'a' to False
Stopping handler for 'a'
Interm value: "T | T"
Result value: "T | T"
Stopping handler for 'T'
FINAL OUTCOME: FAILED
Unregistered validation expression

SIGNAL VECTOR: "E~da"
Input:  "ETad&~?"
Starting handler for 'a'
Starting handler for 'T'
Starting handler for 'd'
Starting handler for 'E'
Parsed value: "T~d | T~a | adE | TE"
Setting predicate 'E' to True
Stopping handler for 'E'
Interm value: "T~d | T~a | ad | T"
Interm value: "T~d | T~a | ad | T"
Setting predicate 'd' to False
Stopping handler for 'd'
Interm value: "T | T~a | T"
Setting predicate 'a' to False
Stopping handler for 'a'
Interm value: "T | T | T"
Result value: "T | T | T"
Stopping handler for 'T'
FINAL OUTCOME: FAILED
Unregistered validation expression

SIGNAL VECTOR: "~E~Tad"
Input:  "ETad&~?"
Starting handler for 'a'
Starting handler for 'T'
Starting handler for 'd'
Starting handler for 'E'
Parsed value: "T~d | T~a | adE | TE"
Interm value: "T~d | T~a | adE | TE"
Setting predicate 'E' to False
Stopping handler for 'E'
Interm value: "T~d | T~a"
Interm value: "T~d | T~a"
Setting predicate 'T' to True
Stopping handler for 'T'
Interm value: "~d | ~a"
Setting predicate 'a' to True
Stopping handler for 'a'
Interm value: "~d"
Setting predicate 'd' to True
Stopping handler for 'd'
FINAL OUTCOME: FAILED
Interm value: "0"
Result value: "0"
Unregistered validation expression

COMPLETED 11 TESTS ON "ETad&~?"
